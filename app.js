var fs 			 = require('fs');var express  = require('express');var app 		 = express();var http 		 = require('http');var server 	 = http.createServer(app);var io 			 = require('socket.io').listen(server);var Mgdb =  require('mongodb').MongoClient;var assert =  require('assert');/*var findRestaurants = function(db, callback) {   var cursor =db.collection('restaurants').find( );   cursor.each(function(err, doc) {      assert.equal(err, null);      if (doc != null) {         console.dir(doc);      } else {         callback();      }   });};var url='mongodb://localhost:27017/test'Mgdb.connect(url, function(err, db) {  assert.equal(null, err);  findRestaurants(db, function() {      db.close();  });});*//*var insertDocument = function(db, callback) {   db.collection('restaurants').insertOne( {      "address" : {         "street" : "2 Avenue",         "zipcode" : "10075",         "building" : "1480",         "coord" : [ -73.9557413, 40.7720266 ]      },      "borough" : "Manhattan",      "cuisine" : "Italian",      "grades" : [         {            "date" : new Date("2014-10-01T00:00:00Z"),            "grade" : "A",            "score" : 11         },         {            "date" : new Date("2014-01-16T00:00:00Z"),            "grade" : "B",            "score" : 17         }      ],      "name" : "Vella",      "restaurant_id" : "41704620"   }, function(err, result) {    assert.equal(err, null);    console.log("Inserted a document into the restaurants collection.");    callback(result);  });};Mgdb.connect(url, function(err, db) {  assert.equal(null, err);  insertDocument(db, function() {      db.close();  });});*/app.use(express.static(__dirname + '/public'));app.get('/socket.io/socket.io.js', function (req, res){		res.sendfile(__dirname + 			 			'/node_modules/socket.io/node_modules/socket.io-client/dist/socket.io.js');});io.on('connection', function(socket){  //console.log('a user connected from socke app');  socket.on('disconnect', function(){    console.log('user disconnected');  });  socket.on('getinputs', function(data){   console.log(data);  });  socket.on('conected', function(data){  	socket.emit('responsedTonewconnected' , {message: "welcome"+ data.origine});  });    socket.on('abroad', function(data){    console.log(data.origine);  })});server.listen(8080, function() {	console.log("server starting on port 3000");});